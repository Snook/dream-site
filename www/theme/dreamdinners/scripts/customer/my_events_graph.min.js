const graphConfig={clientID:CLIENT.microsoft.id,endpoint:"https://graph.microsoft.com/v1.0",options:{redirectUri:PATH.https_server+"/authms_my_events"},scope:["User.Read","Contacts.Read"]};async function getGraphContacts(t){const o=await authWithGraph(graphConfig);if(o){const n=new Headers;const e="Bearer "+o;n.append("Authorization",e);const r={method:"GET",headers:n};const a=graphConfig.endpoint+"/me/contacts";try{const s=await fetch(a,r);const c=await s.json();if(typeof t==="function"){t(c)}else{return c}}catch(t){console.error(`There was an error making the request: ${t}`)}}else{console.error("An auth token must be passed in. To learn more about how to get an auth token for the Microsoft Graph API, check out https://github.com/AzureAD/microsoft-authentication-library-for-js")}}async function authWithGraph(o){if(o.clientID&&o.scope){const n=new Msal.UserAgentApplication(o.clientID,null,null,o.options);try{await n.loginPopup(o.scope)}catch(t){console.error("Error during login",t)}try{const e=await n.acquireTokenSilent(o.scope);return e}catch(t){const e=await n.acquireTokenPopup(o.scope);return e}}else{console.log("You must supply a client id and authentication scopes for your app")}}$(function(){new Msal.UserAgentApplication(CLIENT.microsoft.id,null,null,graphConfig.options)});
//# sourceMappingURL=my_events_graph.min.js.map