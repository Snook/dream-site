{"version":3,"names":["graphConfig","clientID","CLIENT","microsoft","id","endpoint","options","redirectUri","PATH","https_server","scope","async","getGraphContacts","callBack","token","authWithGraph","headers","Headers","bearer","append","method","graphEndpoint","response","fetch","data","json","err","console","error","config","userAgentApplication","Msal","UserAgentApplication","loginPopup","acquireTokenSilent","acquireTokenPopup","log","$"],"sourceRoot":"js/src/customer","sources":["my_events_graph.js"],"sourcesContent":["const graphConfig = {\r\n\tclientID: CLIENT.microsoft.id,\r\n\tendpoint: 'https://graph.microsoft.com/v1.0',\r\n\toptions: {\r\n\t\tredirectUri: PATH.https_server + '/authms_my_events'\r\n\t},\r\n\tscope: [\r\n\t\t'User.Read',\r\n\t\t'Contacts.Read'\r\n\t]\r\n};\r\n\r\nasync function getGraphContacts(callBack)\r\n{\r\n\tconst token = await authWithGraph(graphConfig);\r\n\r\n\tif (token)\r\n\t{\r\n\t\tconst headers = new Headers();\r\n\t\tconst bearer = 'Bearer ' + token;\r\n\t\theaders.append('Authorization', bearer);\r\n\t\tconst options = {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: headers\r\n\t\t};\r\n\t\tconst graphEndpoint = graphConfig.endpoint + '/me/contacts';\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconst response = await fetch(graphEndpoint, options);\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tif (typeof callBack === 'function')\r\n\t\t\t{\r\n\t\t\t\tcallBack(data);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err)\r\n\t\t{\r\n\t\t\tconsole.error(`There was an error making the request: ${err}`)\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tconsole.error('An auth token must be passed in. To learn more about how to get an auth token for the Microsoft Graph API, check out https://github.com/AzureAD/microsoft-authentication-library-for-js');\r\n\t}\r\n}\r\n\r\nasync function authWithGraph(config)\r\n{\r\n\tif (config.clientID && config.scope)\r\n\t{\r\n\t\tconst userAgentApplication = new Msal.UserAgentApplication(config.clientID, null, null, config.options);\r\n\t\ttry\r\n\t\t{\r\n\t\t\tawait userAgentApplication.loginPopup(config.scope);\r\n\t\t}\r\n\t\tcatch (error)\r\n\t\t{\r\n\t\t\tconsole.error('Error during login', error);\r\n\t\t}\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\t// Login success\r\n\t\t\tconst accessToken = await userAgentApplication.acquireTokenSilent(config.scope);\r\n\t\t\treturn accessToken;\r\n\t\t}\r\n\t\tcatch (error)\r\n\t\t{\r\n\t\t\t// AcquireTokenSilent Failure, send an interactive request.\r\n\t\t\t// This will show the Microsoft Account login UI again\r\n\t\t\tconst accessToken = await userAgentApplication.acquireTokenPopup(config.scope);\r\n\t\t\treturn accessToken;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tconsole.log(\"You must supply a client id and authentication scopes for your app\");\r\n\t}\r\n}\r\n\r\n$(function () {\r\n\r\n\tnew Msal.UserAgentApplication(CLIENT.microsoft.id, null, null, graphConfig.options);\r\n\r\n});"],"mappings":"AAAA,MAAMA,YAAc,CACnBC,SAAUC,OAAOC,UAAUC,GAC3BC,SAAU,mCACVC,QAAS,CACRC,YAAaC,KAAKC,aAAe,qBAElCC,MAAO,CACN,YACA,kBAIFC,eAAeC,iBAAiBC,GAE/B,MAAMC,QAAcC,cAAcf,aAElC,GAAIc,EACJ,CACC,MAAME,EAAU,IAAIC,QACdC,EAAS,UAAYJ,EAC3BE,EAAQG,OAAO,gBAAiBD,GAChC,MAAMZ,EAAU,CACfc,OAAQ,MACRJ,QAASA,GAEJK,EAAgBrB,YAAYK,SAAW,eAE7C,IAEC,MAAMiB,QAAiBC,MAAMF,EAAef,GACtCkB,QAAaF,EAASG,OAE5B,GAAwB,mBAAbZ,EAMV,OAAOW,EAJPX,EAASW,EAMX,CACA,MAAOE,GAENC,QAAQC,MAAM,0CAA0CF,IACzD,CACD,MAGCC,QAAQC,MAAM,0LAEhB,CAEAjB,eAAeI,cAAcc,GAE5B,GAAIA,EAAO5B,UAAY4B,EAAOnB,MAC9B,CACC,MAAMoB,EAAuB,IAAIC,KAAKC,qBAAqBH,EAAO5B,SAAU,KAAM,KAAM4B,EAAOvB,SAC/F,UAEOwB,EAAqBG,WAAWJ,EAAOnB,MAC9C,CACA,MAAOkB,GAEND,QAAQC,MAAM,qBAAsBA,EACrC,CAEA,IAIC,aAD0BE,EAAqBI,mBAAmBL,EAAOnB,MAE1E,CACA,MAAOkB,GAKN,aAD0BE,EAAqBK,kBAAkBN,EAAOnB,MAEzE,CACD,MAGCiB,QAAQS,IAAI,qEAEd,CAEAC,GAAE,WAED,IAAIN,KAAKC,qBAAqB9B,OAAOC,UAAUC,GAAI,KAAM,KAAMJ,YAAYM,QAE5E"}