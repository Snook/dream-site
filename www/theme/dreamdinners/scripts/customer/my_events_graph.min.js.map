{"version":3,"sourceRoot":"js/src/dreamdinners","sources":["my_events_graph.js"],"sourcesContent":["const graphConfig = {\r\n\tclientID: CLIENT.microsoft.id,\r\n\tendpoint: 'https://graph.microsoft.com/v1.0',\r\n\toptions: {\r\n\t\tredirectUri: PATH.https_server + '/authms_my_events'\r\n\t},\r\n\tscope: [\r\n\t\t'User.Read',\r\n\t\t'Contacts.Read'\r\n\t]\r\n};\r\n\r\nasync function getGraphContacts(callBack)\r\n{\r\n\tconst token = await authWithGraph(graphConfig);\r\n\r\n\tif (token)\r\n\t{\r\n\t\tconst headers = new Headers();\r\n\t\tconst bearer = 'Bearer ' + token;\r\n\t\theaders.append('Authorization', bearer);\r\n\t\tconst options = {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: headers\r\n\t\t};\r\n\t\tconst graphEndpoint = graphConfig.endpoint + '/me/contacts';\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconst response = await fetch(graphEndpoint, options);\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tif (typeof callBack === 'function')\r\n\t\t\t{\r\n\t\t\t\tcallBack(data);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err)\r\n\t\t{\r\n\t\t\tconsole.error(`There was an error making the request: ${err}`)\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tconsole.error('An auth token must be passed in. To learn more about how to get an auth token for the Microsoft Graph API, check out https://github.com/AzureAD/microsoft-authentication-library-for-js');\r\n\t}\r\n}\r\n\r\nasync function authWithGraph(config)\r\n{\r\n\tif (config.clientID && config.scope)\r\n\t{\r\n\t\tconst userAgentApplication = new Msal.UserAgentApplication(config.clientID, null, null, config.options);\r\n\t\ttry\r\n\t\t{\r\n\t\t\tawait userAgentApplication.loginPopup(config.scope);\r\n\t\t}\r\n\t\tcatch (error)\r\n\t\t{\r\n\t\t\tconsole.error('Error during login', error);\r\n\t\t}\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\t// Login success\r\n\t\t\tconst accessToken = await userAgentApplication.acquireTokenSilent(config.scope);\r\n\t\t\treturn accessToken;\r\n\t\t}\r\n\t\tcatch (error)\r\n\t\t{\r\n\t\t\t// AcquireTokenSilent Failure, send an interactive request.\r\n\t\t\t// This will show the Microsoft Account login UI again\r\n\t\t\tconst accessToken = await userAgentApplication.acquireTokenPopup(config.scope);\r\n\t\t\treturn accessToken;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tconsole.log(\"You must supply a client id and authentication scopes for your app\");\r\n\t}\r\n}\r\n\r\n$(function () {\r\n\r\n\tnew Msal.UserAgentApplication(CLIENT.microsoft.id, null, null, graphConfig.options);\r\n\r\n});"],"names":["graphConfig","clientID","CLIENT","microsoft","id","endpoint","options","redirectUri","PATH","https_server","scope","async","getGraphContacts","callBack","token","await","authWithGraph","headers","Headers","bearer","append","method","graphEndpoint","response","fetch","data","json","err","console","error","config","userAgentApplication","Msal","UserAgentApplication","loginPopup","accessToken","acquireTokenSilent","acquireTokenPopup","log","$"],"mappings":"AAAA,MAAMA,YAAc,CACnBC,SAAUC,OAAOC,UAAUC,GAC3BC,SAAU,mCACVC,QAAS,CACRC,YAAaC,KAAKC,aAAe,mBAClC,EACAC,MAAO,CACN,YACA,gBAEF,EAEAC,eAAeC,iBAAiBC,GAE/B,MAAMC,EAAQC,MAAMC,cAAchB,WAAW,EAE7C,GAAIc,EACJ,CACC,MAAMG,EAAU,IAAIC,QACpB,MAAMC,EAAS,UAAYL,EAC3BG,EAAQG,OAAO,gBAAiBD,CAAM,EACtC,MAAMb,EAAU,CACfe,OAAQ,MACRJ,QAASA,CACV,EACA,MAAMK,EAAgBtB,YAAYK,SAAW,eAE7C,IAEC,MAAMkB,EAAWR,MAAMS,MAAMF,EAAehB,CAAO,EACnD,MAAMmB,EAAOV,MAAMQ,EAASG,KAAK,EAEjC,GAAI,OAAOb,IAAa,WACxB,CACCA,EAASY,CAAI,CACd,KAEA,CACC,OAAOA,CACR,CAKD,CAHA,MAAOE,GAENC,QAAQC,gDAAgDF,GAAK,CAC9D,CACD,KAEA,CACCC,QAAQC,MAAM,yLAAyL,CACxM,CACD,CAEAlB,eAAeK,cAAcc,GAE5B,GAAIA,EAAO7B,UAAY6B,EAAOpB,MAC9B,CACC,MAAMqB,EAAuB,IAAIC,KAAKC,qBAAqBH,EAAO7B,SAAU,KAAM,KAAM6B,EAAOxB,OAAO,EACtG,IAECS,MAAMgB,EAAqBG,WAAWJ,EAAOpB,KAAK,CAKnD,CAHA,MAAOmB,GAEND,QAAQC,MAAM,qBAAsBA,CAAK,CAC1C,CAEA,IAGC,MAAMM,EAAcpB,MAAMgB,EAAqBK,mBAAmBN,EAAOpB,KAAK,EAC9E,OAAOyB,CAQR,CANA,MAAON,GAIN,MAAMM,EAAcpB,MAAMgB,EAAqBM,kBAAkBP,EAAOpB,KAAK,EAC7E,OAAOyB,CACR,CACD,KAEA,CACCP,QAAQU,IAAI,oEAAoE,CACjF,CACD,CAEAC,EAAE,WAED,IAAIP,KAAKC,qBAAqB/B,OAAOC,UAAUC,GAAI,KAAM,KAAMJ,YAAYM,OAAO,CAEnF,CAAC"}