{"version":3,"file":"my_events_graph.min.js","names":["graphConfig","clientID","CLIENT","microsoft","id","endpoint","options","redirectUri","PATH","https_server","scope","async","getGraphContacts","callBack","token","authWithGraph","headers","Headers","bearer","append","method","graphEndpoint","response","fetch","data","json","err","console","error","config","userAgentApplication","Msal","UserAgentApplication","loginPopup","acquireTokenSilent","acquireTokenPopup","log","$"],"sourceRoot":"js/src/dreamdinners/customer","sources":["my_events_graph.js"],"sourcesContent":["const graphConfig = {\n\tclientID: CLIENT.microsoft.id,\n\tendpoint: 'https://graph.microsoft.com/v1.0',\n\toptions: {\n\t\tredirectUri: PATH.https_server + '/authms_my_events'\n\t},\n\tscope: [\n\t\t'User.Read',\n\t\t'Contacts.Read'\n\t]\n};\n\nasync function getGraphContacts(callBack)\n{\n\tconst token = await authWithGraph(graphConfig);\n\n\tif (token)\n\t{\n\t\tconst headers = new Headers();\n\t\tconst bearer = 'Bearer ' + token;\n\t\theaders.append('Authorization', bearer);\n\t\tconst options = {\n\t\t\tmethod: 'GET',\n\t\t\theaders: headers\n\t\t};\n\t\tconst graphEndpoint = graphConfig.endpoint + '/me/contacts';\n\n\t\ttry\n\t\t{\n\t\t\tconst response = await fetch(graphEndpoint, options);\n\t\t\tconst data = await response.json();\n\n\t\t\tif (typeof callBack === 'function')\n\t\t\t{\n\t\t\t\tcallBack(data);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn data;\n\t\t\t}\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\tconsole.error(`There was an error making the request: ${err}`)\n\t\t}\n\t}\n\telse\n\t{\n\t\tconsole.error('An auth token must be passed in. To learn more about how to get an auth token for the Microsoft Graph API, check out https://github.com/AzureAD/microsoft-authentication-library-for-js');\n\t}\n}\n\nasync function authWithGraph(config)\n{\n\tif (config.clientID && config.scope)\n\t{\n\t\tconst userAgentApplication = new Msal.UserAgentApplication(config.clientID, null, null, config.options);\n\t\ttry\n\t\t{\n\t\t\tawait userAgentApplication.loginPopup(config.scope);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('Error during login', error);\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\t// Login success\n\t\t\tconst accessToken = await userAgentApplication.acquireTokenSilent(config.scope);\n\t\t\treturn accessToken;\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\t// AcquireTokenSilent Failure, send an interactive request.\n\t\t\t// This will show the Microsoft Account login UI again\n\t\t\tconst accessToken = await userAgentApplication.acquireTokenPopup(config.scope);\n\t\t\treturn accessToken;\n\t\t}\n\t}\n\telse\n\t{\n\t\tconsole.log(\"You must supply a client id and authentication scopes for your app\");\n\t}\n}\n\n$(function () {\n\n\tnew Msal.UserAgentApplication(CLIENT.microsoft.id, null, null, graphConfig.options);\n\n});"],"mappings":"AAAA,MAAMA,YAAc,CACnBC,SAAUC,OAAOC,UAAUC,GAC3BC,SAAU,mCACVC,QAAS,CACRC,YAAaC,KAAKC,aAAe,qBAElCC,MAAO,CACN,YACA,kBAIFC,eAAeC,iBAAiBC,GAE/B,MAAMC,QAAcC,cAAcf,aAElC,GAAIc,EACJ,CACC,MAAME,EAAU,IAAIC,QACdC,EAAS,UAAYJ,EAC3BE,EAAQG,OAAO,gBAAiBD,GAChC,MAAMZ,EAAU,CACfc,OAAQ,MACRJ,QAASA,GAEJK,EAAgBrB,YAAYK,SAAW,eAE7C,IAEC,MAAMiB,QAAiBC,MAAMF,EAAef,GACtCkB,QAAaF,EAASG,OAE5B,GAAwB,mBAAbZ,EAMV,OAAOW,EAJPX,EAASW,EAMX,CACA,MAAOE,GAENC,QAAQC,MAAM,0CAA0CF,IACzD,CACD,MAGCC,QAAQC,MAAM,0LAEhB,CAEAjB,eAAeI,cAAcc,GAE5B,GAAIA,EAAO5B,UAAY4B,EAAOnB,MAC9B,CACC,MAAMoB,EAAuB,IAAIC,KAAKC,qBAAqBH,EAAO5B,SAAU,KAAM,KAAM4B,EAAOvB,SAC/F,UAEOwB,EAAqBG,WAAWJ,EAAOnB,MAC9C,CACA,MAAOkB,GAEND,QAAQC,MAAM,qBAAsBA,EACrC,CAEA,IAIC,aAD0BE,EAAqBI,mBAAmBL,EAAOnB,MAE1E,CACA,MAAOkB,GAKN,aAD0BE,EAAqBK,kBAAkBN,EAAOnB,MAEzE,CACD,MAGCiB,QAAQS,IAAI,qEAEd,CAEAC,GAAE,WAED,IAAIN,KAAKC,qBAAqB9B,OAAOC,UAAUC,GAAI,KAAM,KAAMJ,YAAYM,QAE5E","ignoreList":[]}