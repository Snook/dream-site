{"version":3,"file":"reports_map_activity.min.js","names":["timeframe","checkperiod","last_time","Date","getTime","map","markers","hasrun","initMap","google","maps","Map","document","getElementById","zoom","mapTypeId","Geocoder","geocode","address","results","status","GeocoderStatus","OK","setCenter","geometry","location","alert","map_activity_timer","$","doTimeout","ajax","url","type","timeout","dataType","data","processor","success","json","time_in","each","key","marker_data","this","timestamp_updated_unix","setTimeout","expire","set_marker","PATH","image","console","log","toTimeString","slice","id","fadmin_is_idle","error","objAJAXRequest","strError","USER_LOGGEDIN","cookie","TO","sort_list","html","children","sort","a","b","icon","zindex","marker","Marker","animation","Animation","DROP","position","lat","lng","lon","zIndex","create_event","time_now","setMap","slideUp","remove","update_servings","update_foundation","firstname","lastname_letter","store_name","state","date_time","prependTo","hide","slideDown","new_serving_total","servings_total_count","text","toLocaleString","new_foundation_total","ltd_round_up_value","subtotal_ltd_menu_item_value","Math","floor","toggleBounce","getAnimation","setAnimation","removeClass","setZIndex","BOUNCE","addClass","on"],"sourceRoot":"js/src/dreamdinners/admin","sources":["reports_map_activity.js"],"sourcesContent":["var timeframe = 60; // minutes\nvar checkperiod = 10; // seconds\nvar last_time = (((new Date).getTime() / 1000) - (timeframe * 60));\nvar map = null;\nvar markers = [];\nvar hasrun = false;\n\nfunction initMap()\n{\n\tvar country = \"United States\";\n\n\tvar myOptions = {\n\t\tzoom: 5,\n\t\tmapTypeId: 'roadmap'\n\t};\n\n\t// create map\n\tmap = new google.maps.Map(document.getElementById(\"map\"), myOptions);\n\n\t// center map on country\n\tvar geocoder = new google.maps.Geocoder();\n\tgeocoder.geocode({'address': country}, function (results, status) {\n\t\tif (status == google.maps.GeocoderStatus.OK)\n\t\t{\n\t\t\tmap.setCenter(results[0].geometry.location);\n\t\t}\n\t\telse\n\t\t{\n\t\t\talert(\"Could not find location: \" + location);\n\t\t}\n\t});\n\n\t// start loop\n\tmap_activity_timer();\n}\n\nfunction map_activity_timer()\n{\n\t// cancel existing timer if there is one\n\t$.doTimeout('map_activity_timer');\n\n\t// check every checkperiod for new activity\n\t$.doTimeout('map_activity_timer', (checkperiod * 1000), function () {\n\n\t\t$.ajax({\n\t\t\turl: '/processor',\n\t\t\ttype: 'POST',\n\t\t\ttimeout: 60000,\n\t\t\tdataType: 'json',\n\t\t\tdata: {\n\t\t\t\tprocessor: 'admin_reports_map_activity',\n\t\t\t\tlast_time: last_time\n\t\t\t},\n\t\t\tsuccess: function (json, status) {\n\n\t\t\t\ttime_in = 1;\n\n\t\t\t\t$.each(json.data, function (key) {\n\n\t\t\t\t\t// first load drops pins separately\n\t\t\t\t\ttime_in++;\n\n\t\t\t\t\t// store data\n\t\t\t\t\tvar marker_data = this;\n\n\t\t\t\t\t// set latest timestamp from data\n\t\t\t\t\tif (this.timestamp_updated_unix > last_time)\n\t\t\t\t\t{\n\t\t\t\t\t\tlast_time = this.timestamp_updated_unix;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(function (expire) {\n\t\t\t\t\t\tset_marker(marker_data, PATH.image + '/style/logo/heart-grn-75x55.png', 0);\n\t\t\t\t\t\tconsole.log((new Date).toTimeString().slice(0, 8) + ': Adding marker #' + marker_data.id);\n\t\t\t\t\t}, time_in * 200);\n\n\t\t\t\t\tfadmin_is_idle(false);\n\n\t\t\t\t});\n\n\t\t\t},\n\t\t\terror: function (objAJAXRequest, strError) {\n\t\t\t\t// error\n\t\t\t}\n\n\t\t});\n\n\t\t// prevent fadmin logout\n\t\tif (USER_LOGGEDIN && $.cookie('DreamSite_TO'))\n\t\t{\n\t\t\tTO = $.cookie('DreamSite_TO');\n\n\t\t\tfadmin_is_idle(false);\n\t\t}\n\n\t\t// loop doTimeout\n\t\treturn true;\n\n\t});\n\n\t// call it immediately\n\t$.doTimeout('map_activity_timer', true);\n}\n\nfunction sort_list()\n{\n\t$(\"#event\").each(function () {\n\t\t$(this).html($(this).children('li').sort(function (a, b) {\n\t\t\treturn ($(b).data('time')) > ($(a).data('time')) ? 1 : -1;\n\t\t}));\n\t});\n}\n\nfunction set_marker(marker_data, icon, zindex)\n{\n\t// create marker\n\tvar marker = new google.maps.Marker({\n\t\tanimation: google.maps.Animation.DROP,\n\t\tposition: {\n\t\t\tlat: marker_data.lat,\n\t\t\tlng: marker_data.lon\n\t\t},\n\t\tmap: map,\n\t\ticon: icon,\n\t\tzIndex: zindex\n\t});\n\n\t// create event\n\tcreate_event(marker_data, icon);\n\n\t// figure out expire time\n\tvar time_now = (new Date).getTime();\n\tvar expire = ((marker_data.timestamp_updated_unix * 1000) + (timeframe * 60 * 1000)) - time_now;\n\n\t// store marker info\n\tmarkers[marker_data.id] = {\n\t\t'marker': marker,\n\t\t'expire': expire,\n\t\t'marker_data': marker_data\n\t};\n\n\t// delete marker\n\tsetTimeout(function (expire) {\n\t\tmarkers[marker_data.id].marker.setMap(null);\n\t\t$('#' + marker_data.id).slideUp(\"normal\", function () {\n\t\t\t$(this).remove();\n\t\t});\n\t\tupdate_servings(marker_data, true);\n\t\tupdate_foundation(marker_data, true);\n\t\tconsole.log((new Date).toTimeString().slice(0, 8) + ': Removing marker #' + marker_data.id);\n\t}, expire);\n}\n\nfunction create_event(marker_data, icon)\n{\n\t// create order event\n\t$('<li id=\"' + marker_data.id + '\" data-time=\"' + marker_data.timestamp_updated_unix + '\" class=\"event row py-1 m-0 border-bottom cursor-pointer\">').html('<div class=\"col-2 align-self-center\"><img src=\"' + icon + '\" /></div><div class=\"col-10\"><div class=\"font-weight-bold\">' + marker_data.firstname + ' ' + marker_data.lastname_letter + '</div><div>' + marker_data.store_name + ', ' + marker_data.state + '</div><div class=\"text-muted font-size-small\">' + marker_data.date_time + '</div></div>').prependTo($('#event')).hide().slideDown();\n\n\t// update servings\n\tupdate_servings(marker_data, false);\n\n\t// update foundation\n\tupdate_foundation(marker_data, false);\n\n\tsort_list();\n}\n\nfunction update_servings(marker_data, remove)\n{\n\tif (remove == false)\n\t{\n\t\tvar new_serving_total = $('#servings').data('total') + marker_data.servings_total_count;\n\t}\n\telse\n\t{\n\t\tvar new_serving_total = $('#servings').data('total') - marker_data.servings_total_count;\n\t}\n\n\t$('#servings').data('total', new_serving_total);\n\t$('#servings').text(new_serving_total.toLocaleString(\"en\"));\n}\n\nfunction update_foundation(marker_data, remove)\n{\n\tif (remove == false)\n\t{\n\t\tvar new_foundation_total = $('#foundation').data('total') + marker_data.ltd_round_up_value + marker_data.subtotal_ltd_menu_item_value;\n\t}\n\telse\n\t{\n\t\tvar new_foundation_total = $('#foundation').data('total') - marker_data.ltd_round_up_value - marker_data.subtotal_ltd_menu_item_value;\n\t}\n\n\t$('#foundation').data('total', new_foundation_total);\n\t$('#foundation').text(Math.floor(new_foundation_total / .25).toLocaleString(\"en\"));\n}\n\nfunction toggleBounce(id)\n{\n\tif (markers[id].marker.getAnimation() !== null)\n\t{\n\t\tmarkers[id].marker.setAnimation(null);\n\t\t$('#' + id).removeClass('border-width-2-imp border-green');\n\t}\n\telse\n\t{\n\t\tmarkers[id].marker.setZIndex(100);\n\t\tmarkers[id].marker.setAnimation(google.maps.Animation.BOUNCE);\n\t\t$('#' + id).addClass('border-width-2-imp border-green');\n\t}\n}\n\n$(document).on(\"click\", \".event\", function () {\n\n\ttoggleBounce(this.id);\n\n});"],"mappings":"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","ignoreList":[]}