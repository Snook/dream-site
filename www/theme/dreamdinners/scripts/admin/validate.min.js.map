{"version":3,"sourceRoot":"js/src/dreamdinners","sources":["validate.js"],"sourcesContent":["var allErrorsAreDisplayedInLine = true;\r\n\r\nfunction _check_form(form)\r\n{\r\n\tallErrorsAreDisplayedInLine = true;\r\n\treturn _check_elements(form.elements);\r\n}\r\n\r\nfunction dd_insertAfter(newElement, targetElement)\r\n{\r\n\tvar parent = targetElement.parentNode;\r\n\r\n\tif (parent.lastChild == targetElement)\r\n\t{\r\n\t\tparent.appendChild(newElement);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tparent.insertBefore(newElement, targetElement.nextSibling);\r\n\t}\r\n}\r\n\r\nfunction emailCheck(emailStr, allowEmpty)\r\n{\r\n\tif (allowEmpty && (emailStr == null || emailStr == \"\"))\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\temailStr = emailStr.toLowerCase();\r\n\tvar emailPat = /^(.+)@(.+)$/;\r\n\tvar specialChars = \"\\\\(\\\\)><@,;:\\\\\\\\\\\\\\\"\\\\.\\\\[\\\\]\";\r\n\tvar validChars = \"\\[^\\\\s\" + specialChars + \"\\]\";\r\n\tvar quotedUser = \"(\\\"[^\\\"]*\\\")\";\r\n\tvar ipDomainPat = /^\\[(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\]$/;\r\n\tvar atom = validChars + '+';\r\n\tvar word = \"(\" + atom + \"|\" + quotedUser + \")\";\r\n\tvar userPat = new RegExp(\"^\" + word + \"(\\\\.\" + word + \")*$\");\r\n\tvar matchArray = emailStr.match(emailPat);\r\n\tif (matchArray == null)\r\n\t{\r\n\t\tif (allowEmpty)\r\n\t\t{\r\n\t\t\treturn \"The email address you entered is incorrect.\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn \"The email address you entered is empty or incorrect.\";\r\n\t\t}\r\n\t}\r\n\tvar user = matchArray[1];\r\n\tvar domain = matchArray[2];\r\n\tfor (i = 0; i < user.length; i++)\r\n\t{\r\n\t\tif (user.charCodeAt(i) > 127)\r\n\t\t{\r\n\t\t\treturn \"The user name of the email address you entered contains invalid characters.\";\r\n\t\t}\r\n\t}\r\n\tfor (i = 0; i < domain.length; i++)\r\n\t{\r\n\t\tif (domain.charCodeAt(i) > 127)\r\n\t\t{\r\n\t\t\treturn \"The domain name of the email address you entered contains invalid characters.\";\r\n\t\t}\r\n\t}\r\n\tif (user.match(userPat) == null)\r\n\t{\r\n\t\treturn \"The user name of the email address you entered seems incorrect.\";\r\n\t}\r\n\tvar IPArray = domain.match(ipDomainPat);\r\n\tif (IPArray != null)\r\n\t{\r\n\t\tfor (var i = 1; i <= 4; i++)\r\n\t\t{\r\n\t\t\tif (IPArray[i] > 255)\r\n\t\t\t{\r\n\t\t\t\treturn \"The IP address of the email address you entered seems incorrect.\";\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t/*\r\n\t Must contain the @ symbol\r\n\t Must contain a character before the @ symbol\r\n\t Must contain a dot: .\r\n\t Must contain two characters between the @ symbol and dot\r\n\t Must contain two characters after the dot\r\n\t */\r\n\tvar emailRegEx = /^\\S{1,}@\\S{1,}\\.\\S{2,}$/;\r\n\r\n\tif (!emailRegEx.test(emailStr))\r\n\t{\r\n\t\treturn \"The email address you entered does not appear to a valid format.\";\r\n\t}\r\n\r\n\tvar domArr = domain.split(\".\");\r\n\r\n\tif (domArr[domArr.length - 1] == \"local\" && domArr[domArr.length - 2] != \"dreamdinners\")\r\n\t{\r\n\t\treturn \"The top domain 'local' can only be used with a the 'dreamdinners' domain.\";\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n//defines input as an integer\r\nfunction isInteger(value)\r\n{\r\n\treturn (parseInt(value) == value);\r\n}\r\n\r\nfunction hourCheck(hourStr)\r\n{\r\n\r\n\tif (isNaN(hourStr))\r\n\t{\r\n\t\treturn \"The hour entry is not a number.\";\r\n\t}\r\n\r\n\tif (!isInteger(hourStr))\r\n\t{\r\n\t\treturn \"The hour entry is not an integer.\";\r\n\t}\r\n\r\n\tif (hourStr < 0 || hourStr > 12)\r\n\t{\r\n\t\treturn \"The hour entry must be a number from 0 to 12.\";\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction minutesCheck(minutesStr)\r\n{\r\n\r\n\tif (isNaN(minutesStr))\r\n\t{\r\n\t\treturn \"The minutes entry is not a number.\";\r\n\t}\r\n\r\n\tif (!isInteger(minutesStr))\r\n\t{\r\n\t\treturn \"The minutes entry is not an integer.\";\r\n\t}\r\n\r\n\tif (minutesStr < 0 || minutesStr > 59)\r\n\t{\r\n\t\treturn \"The minutes entry must be a number from 0 to 59.\";\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction numberCheck(numberStr)\r\n{\r\n\r\n\tif (isNaN(numberStr))\r\n\t{\r\n\t\treturn \"The entry is not a number.\";\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction moneyCheck(moneyStr)\r\n{\r\n\r\n\tif (isNaN(moneyStr))\r\n\t{\r\n\t\treturn \"The entry is not a number.\";\r\n\t}\r\n\r\n\tif (moneyStr == 0)\r\n\t{\r\n\t\treturn \"The entry is zero. Please enter a non-zero amount.\";\r\n\t}\r\n\r\n\tif (moneyStr < 0)\r\n\t{\r\n\t\treturn \"The entry is less than zero. Please enter a positive amount.\";\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction telephoneCheck(telephoneStr)\r\n{\r\n\tvar teleArr = telephoneStr.split(\"-\");\r\n\r\n\tvar isValid = true;\r\n\tif (teleArr.length != 3)\r\n\t{\r\n\t\tisValid = false;\r\n\t}\r\n\r\n\tif (isValid)\r\n\t{\r\n\t\tif (teleArr[0].length != 3)\r\n\t\t{\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse if (teleArr[1].length != 3)\r\n\t\t{\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse if (teleArr[2].length != 4)\r\n\t\t{\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t}\r\n\r\n\tif (isValid && isNaN(teleArr[0]))\r\n\t{\r\n\t\tisValid = false;\r\n\t}\r\n\telse if (isValid && isNaN(teleArr[1]))\r\n\t{\r\n\t\tisValid = false;\r\n\t}\r\n\telse if (isValid && isNaN(teleArr[2]))\r\n\t{\r\n\t\tisValid = false;\r\n\t}\r\n\r\n\tif (!isValid)\r\n\t{\r\n\t\treturn \"Telphone numbers must be in the format: ###-###-####\";\r\n\t}\r\n\r\n\treturn true;\r\n}"],"names":["allErrorsAreDisplayedInLine","_check_form","form","_check_elements","elements","dd_insertAfter","newElement","targetElement","parent","parentNode","lastChild","appendChild","insertBefore","nextSibling","emailCheck","emailStr","allowEmpty","toLowerCase","emailPat","specialChars","validChars","quotedUser","ipDomainPat","atom","word","userPat","RegExp","matchArray","match","user","domain","i","length","charCodeAt","IPArray","emailRegEx","test","domArr","split","isInteger","value","parseInt","hourCheck","hourStr","isNaN","minutesCheck","minutesStr","numberCheck","numberStr","moneyCheck","moneyStr","telephoneCheck","telephoneStr","teleArr","isValid"],"mappings":"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"}