{"version":3,"file":"validate.min.js","names":["allErrorsAreDisplayedInLine","_check_form","form","_check_elements","elements","dd_insertAfter","newElement","targetElement","parent","parentNode","lastChild","appendChild","insertBefore","nextSibling","emailCheck","emailStr","allowEmpty","toLowerCase","word","userPat","RegExp","matchArray","match","user","domain","i","length","charCodeAt","IPArray","test","domArr","split","isInteger","value","parseInt","hourCheck","hourStr","isNaN","minutesCheck","minutesStr","numberCheck","numberStr","moneyCheck","moneyStr","telephoneCheck","telephoneStr","teleArr","isValid"],"sourceRoot":"js/src/dreamdinners/admin","sources":["validate.js"],"sourcesContent":["var allErrorsAreDisplayedInLine = true;\n\nfunction _check_form(form)\n{\n\tallErrorsAreDisplayedInLine = true;\n\treturn _check_elements(form.elements);\n}\n\nfunction dd_insertAfter(newElement, targetElement)\n{\n\tvar parent = targetElement.parentNode;\n\n\tif (parent.lastChild == targetElement)\n\t{\n\t\tparent.appendChild(newElement);\n\t}\n\telse\n\t{\n\t\tparent.insertBefore(newElement, targetElement.nextSibling);\n\t}\n}\n\nfunction emailCheck(emailStr, allowEmpty)\n{\n\tif (allowEmpty && (emailStr == null || emailStr == \"\"))\n\t{\n\t\treturn true;\n\t}\n\n\temailStr = emailStr.toLowerCase();\n\tvar emailPat = /^(.+)@(.+)$/;\n\tvar specialChars = \"\\\\(\\\\)><@,;:\\\\\\\\\\\\\\\"\\\\.\\\\[\\\\]\";\n\tvar validChars = \"\\[^\\\\s\" + specialChars + \"\\]\";\n\tvar quotedUser = \"(\\\"[^\\\"]*\\\")\";\n\tvar ipDomainPat = /^\\[(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\]$/;\n\tvar atom = validChars + '+';\n\tvar word = \"(\" + atom + \"|\" + quotedUser + \")\";\n\tvar userPat = new RegExp(\"^\" + word + \"(\\\\.\" + word + \")*$\");\n\tvar matchArray = emailStr.match(emailPat);\n\tif (matchArray == null)\n\t{\n\t\tif (allowEmpty)\n\t\t{\n\t\t\treturn \"The email address you entered is incorrect.\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn \"The email address you entered is empty or incorrect.\";\n\t\t}\n\t}\n\tvar user = matchArray[1];\n\tvar domain = matchArray[2];\n\tfor (i = 0; i < user.length; i++)\n\t{\n\t\tif (user.charCodeAt(i) > 127)\n\t\t{\n\t\t\treturn \"The user name of the email address you entered contains invalid characters.\";\n\t\t}\n\t}\n\tfor (i = 0; i < domain.length; i++)\n\t{\n\t\tif (domain.charCodeAt(i) > 127)\n\t\t{\n\t\t\treturn \"The domain name of the email address you entered contains invalid characters.\";\n\t\t}\n\t}\n\tif (user.match(userPat) == null)\n\t{\n\t\treturn \"The user name of the email address you entered seems incorrect.\";\n\t}\n\tvar IPArray = domain.match(ipDomainPat);\n\tif (IPArray != null)\n\t{\n\t\tfor (var i = 1; i <= 4; i++)\n\t\t{\n\t\t\tif (IPArray[i] > 255)\n\t\t\t{\n\t\t\t\treturn \"The IP address of the email address you entered seems incorrect.\";\n\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t/*\n\t Must contain the @ symbol\n\t Must contain a character before the @ symbol\n\t Must contain a dot: .\n\t Must contain two characters between the @ symbol and dot\n\t Must contain two characters after the dot\n\t */\n\tvar emailRegEx = /^\\S{1,}@\\S{1,}\\.\\S{2,}$/;\n\n\tif (!emailRegEx.test(emailStr))\n\t{\n\t\treturn \"The email address you entered does not appear to a valid format.\";\n\t}\n\n\tvar domArr = domain.split(\".\");\n\n\tif (domArr[domArr.length - 1] == \"local\" && domArr[domArr.length - 2] != \"dreamdinners\")\n\t{\n\t\treturn \"The top domain 'local' can only be used with a the 'dreamdinners' domain.\";\n\t}\n\n\treturn true;\n}\n\n//defines input as an integer\nfunction isInteger(value)\n{\n\treturn (parseInt(value) == value);\n}\n\nfunction hourCheck(hourStr)\n{\n\n\tif (isNaN(hourStr))\n\t{\n\t\treturn \"The hour entry is not a number.\";\n\t}\n\n\tif (!isInteger(hourStr))\n\t{\n\t\treturn \"The hour entry is not an integer.\";\n\t}\n\n\tif (hourStr < 0 || hourStr > 12)\n\t{\n\t\treturn \"The hour entry must be a number from 0 to 12.\";\n\t}\n\n\treturn true;\n}\n\nfunction minutesCheck(minutesStr)\n{\n\n\tif (isNaN(minutesStr))\n\t{\n\t\treturn \"The minutes entry is not a number.\";\n\t}\n\n\tif (!isInteger(minutesStr))\n\t{\n\t\treturn \"The minutes entry is not an integer.\";\n\t}\n\n\tif (minutesStr < 0 || minutesStr > 59)\n\t{\n\t\treturn \"The minutes entry must be a number from 0 to 59.\";\n\t}\n\n\treturn true;\n}\n\nfunction numberCheck(numberStr)\n{\n\n\tif (isNaN(numberStr))\n\t{\n\t\treturn \"The entry is not a number.\";\n\t}\n\n\treturn true;\n}\n\nfunction moneyCheck(moneyStr)\n{\n\n\tif (isNaN(moneyStr))\n\t{\n\t\treturn \"The entry is not a number.\";\n\t}\n\n\tif (moneyStr == 0)\n\t{\n\t\treturn \"The entry is zero. Please enter a non-zero amount.\";\n\t}\n\n\tif (moneyStr < 0)\n\t{\n\t\treturn \"The entry is less than zero. Please enter a positive amount.\";\n\t}\n\n\treturn true;\n}\n\nfunction telephoneCheck(telephoneStr)\n{\n\tvar teleArr = telephoneStr.split(\"-\");\n\n\tvar isValid = true;\n\tif (teleArr.length != 3)\n\t{\n\t\tisValid = false;\n\t}\n\n\tif (isValid)\n\t{\n\t\tif (teleArr[0].length != 3)\n\t\t{\n\t\t\tisValid = false;\n\t\t}\n\t\telse if (teleArr[1].length != 3)\n\t\t{\n\t\t\tisValid = false;\n\t\t}\n\t\telse if (teleArr[2].length != 4)\n\t\t{\n\t\t\tisValid = false;\n\t\t}\n\t}\n\n\tif (isValid && isNaN(teleArr[0]))\n\t{\n\t\tisValid = false;\n\t}\n\telse if (isValid && isNaN(teleArr[1]))\n\t{\n\t\tisValid = false;\n\t}\n\telse if (isValid && isNaN(teleArr[2]))\n\t{\n\t\tisValid = false;\n\t}\n\n\tif (!isValid)\n\t{\n\t\treturn \"Telphone numbers must be in the format: ###-###-####\";\n\t}\n\n\treturn true;\n}"],"mappings":"AAAA,IAAIA,6BAA8B,EAElC,SAASC,YAAYC,GAGpB,OADAF,6BAA8B,EACvBG,gBAAgBD,EAAKE,SAC7B,CAEA,SAASC,eAAeC,EAAYC,GAEnC,IAAIC,EAASD,EAAcE,WAEvBD,EAAOE,WAAaH,EAEvBC,EAAOG,YAAYL,GAInBE,EAAOI,aAAaN,EAAYC,EAAcM,YAEhD,CAEA,SAASC,WAAWC,EAAUC,GAE7B,GAAIA,IAA2B,MAAZD,GAAgC,IAAZA,GAEtC,OAAO,EAGRA,EAAWA,EAASE,cACpB,IAMIC,EAAO,kDACPC,EAAU,IAAIC,OAAO,IAAMF,EAAO,OAASA,EAAO,OAClDG,EAAaN,EAASO,MARX,eASf,GAAkB,MAAdD,EAEH,OAAIL,EAEI,8CAIA,uDAGT,IAAIO,EAAOF,EAAW,GAClBG,EAASH,EAAW,GACxB,IAAKI,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAE5B,GAAIF,EAAKI,WAAWF,GAAK,IAExB,MAAO,8EAGT,IAAKA,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAE9B,GAAID,EAAOG,WAAWF,GAAK,IAE1B,MAAO,gFAGT,GAA2B,MAAvBF,EAAKD,MAAMH,GAEd,MAAO,kEAER,IAAIS,EAAUJ,EAAOF,MApCH,oDAqClB,GAAe,MAAXM,EACJ,CACC,IAAK,IAAIH,EAAI,EAAGA,GAAK,EAAGA,IAEvB,GAAIG,EAAQH,GAAK,IAEhB,MAAO,mEAIT,OAAO,CACR,CAUA,IAFiB,0BAEDI,KAAKd,GAEpB,MAAO,mEAGR,IAAIe,EAASN,EAAOO,MAAM,KAE1B,MAAiC,SAA7BD,EAAOA,EAAOJ,OAAS,IAA8C,gBAA7BI,EAAOA,EAAOJ,OAAS,IAE3D,2EAIT,CAGA,SAASM,UAAUC,GAElB,OAAQC,SAASD,IAAUA,CAC5B,CAEA,SAASE,UAAUC,GAGlB,OAAIC,MAAMD,GAEF,kCAGHJ,UAAUI,KAKXA,EAAU,GAAKA,EAAU,KAErB,gDALA,mCAST,CAEA,SAASE,aAAaC,GAGrB,OAAIF,MAAME,GAEF,qCAGHP,UAAUO,KAKXA,EAAa,GAAKA,EAAa,KAE3B,mDALA,sCAST,CAEA,SAASC,YAAYC,GAGpB,OAAIJ,MAAMI,IAEF,4BAIT,CAEA,SAASC,WAAWC,GAGnB,OAAIN,MAAMM,GAEF,6BAGQ,GAAZA,EAEI,uDAGJA,EAAW,IAEP,8DAIT,CAEA,SAASC,eAAeC,GAEvB,IAAIC,EAAUD,EAAad,MAAM,KAE7BgB,GAAU,EAmCd,OAlCsB,GAAlBD,EAAQpB,SAEXqB,GAAU,GAGPA,IAEsB,GAArBD,EAAQ,GAAGpB,QAIe,GAArBoB,EAAQ,GAAGpB,QAIU,GAArBoB,EAAQ,GAAGpB,UANnBqB,GAAU,IAYRA,GAAWV,MAAMS,EAAQ,KAIpBC,GAAWV,MAAMS,EAAQ,KAIzBC,GAAWV,MAAMS,EAAQ,OANjCC,GAAU,KAWNA,GAEG,sDAIT"}